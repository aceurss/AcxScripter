-- Load Orion UI Library
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/Seven7-lua/Roblox/refs/heads/main/Librarys/Orion/Orion.lua')))()

-- Create Window
local Window = OrionLib:MakeWindow({
    Name = "Ninja Legends Auto Farm",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "OrionConfig"
})

-- Create Main Tab
local Tab = Window:MakeTab({
    Name = "Main",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Notification Example
OrionLib:MakeNotification({
    Name = "Welcome!",
    Content = "UI Loaded Successfully",
    Image = "rbxassetid://4483345998",
    Time = 3
})

-- Variables for locations and settings
local sellLocation = game.Workspace.SellNinjitsu -- Adjust this location if needed
local islandsFolder = game.Workspace.Islands -- Folder containing the islands
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local backpack = player.Backpack

-- Add Buttons and Toggles to Orion UI

-- Auto Sell Button
Tab:AddButton({
    Name = "Auto Sell",
    Callback = function()
        -- Function to teleport to Sell Ninjitsu location
        local function teleportToSell()
            if sellLocation then
                humanoidRootPart.CFrame = sellLocation.CFrame
            end
        end

        -- Function to Auto Sell (simulate clicking the sell button)
        local function autoSell()
            teleportToSell()
            while true do
                -- Assuming there's a ClickDetector in SellNinjitsu object for selling
                local sellButton = sellLocation:FindFirstChild("ClickDetector")
                if sellButton then
                    -- Simulate click to sell
                    fireclickdetector(sellButton)
                end
                wait(0.1) -- Faster selling loop (reduce this to increase speed)
            end
        end

        -- Start Auto Sell
        autoSell()
    end    
})

-- Auto Swing Sword Button
Tab:AddButton({
    Name = "Auto Swing Sword",
    Callback = function()
        -- Function to Auto Swing Sword
        local function autoSwingSword()
            while true do
                -- Check if the player has a sword (Tool)
                local sword = backpack:FindFirstChild("Sword") -- Change "Sword" to the actual name of the player's sword tool
                if sword and sword:IsA("Tool") then
                    -- Simulate swing by activating the sword tool
                    sword:Activate() -- This will trigger the tool's activation (swinging)
                end
                wait(0.1) -- Faster swing interval (reduce this to increase swing speed)
            end
        end

        -- Start Auto Swing Sword
        autoSwingSword()
    end    
})

-- Island Teleportation
Tab:AddDropdown({
    Name = "Select Island",
    Options = { "Island 1", "Island 2", "Island 3" }, -- Add as many islands as necessary
    Default = "Island 1",
    Callback = function(option)
        local island = islandsFolder:FindFirstChild(option)
        if island then
            humanoidRootPart.CFrame = island.PrimaryPart.CFrame
        end
    end
})

-- Misc Features: Infinite Yield, Unlimited Jump, Speed Boost
Tab:AddToggle({
    Name = "Infinite Yield",
    Default = false,
    Callback = function(state)
        if state then
            while true do
                game:GetService("ReplicatedStorage").Events.Yield:FireServer()
                wait(0.5)
            end
        end
    end
})

Tab:AddToggle({
    Name = "Unlimited Jump",
    Default = false,
    Callback = function(state)
        if state then
            while true do
                character.Humanoid.JumpHeight = math.huge
                wait(0.5)
            end
        end
    end
})

Tab:AddToggle({
    Name = "Speed Boost",
    Default = false,
    Callback = function(state)
        if state then
            while true do
                character.Humanoid.WalkSpeed = 100
                wait(0.5)
            end
        end
    end
})

-- Auto Buy Features
Tab:AddButton({
    Name = "Auto Buy Rank",
    Callback = function()
        local function autoBuyNewRank()
            while true do
                if game.Players.LocalPlayer.PlayerStats.Rank < 10 then
                    game:GetService("ReplicatedStorage").Events.BuyRank:FireServer()
                end
                wait(5)
            end
        end

        -- Start Auto Buy Rank
        autoBuyNewRank()
    end    
})

Tab:AddButton({
    Name = "Auto Buy Belt",
    Callback = function()
        local function autoBuyNewBelt()
            while true do
                if game.Players.LocalPlayer.PlayerStats.Belt < 5 then
                    game:GetService("ReplicatedStorage").Events.BuyBelt:FireServer()
                end
                wait(5)
            end
        end

        -- Start Auto Buy Belt
        autoBuyNewBelt()
    end    
})

Tab:AddButton({
    Name = "Auto Upgrade Skills",
    Callback = function()
        local function autoSkillsUpgrade()
            while true do
                game:GetService("ReplicatedStorage").Events.UpgradeSkills:FireServer()
                wait(3)
            end
        end

        -- Start Auto Skills Upgrade
        autoSkillsUpgrade()
    end    
})

-- Toggle UI Button
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "ToggleUI"
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false

local Toggle = Instance.new("TextButton")
Toggle.Name = "Toggle"
Toggle.Parent = ScreenGui
Toggle.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Toggle.BackgroundTransparency = 0.5
Toggle.Position = UDim2.new(0, 0, 0.45, 0)
Toggle.Size = UDim2.new(0, 50, 0, 50)
Toggle.Draggable = true
Toggle.Text = "UI"

local Corner = Instance.new("UICorner")
Corner.CornerRadius = UDim.new(0.2, 0)
Corner.Parent = Toggle

Toggle.MouseButton1Click:Connect(function()
    OrionLib:ToggleUi()
end)

-- Initialize Orion UI
OrionLib:Init()-- Load Orion UI Library
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/Seven7-lua/Roblox/refs/heads/main/Librarys/Orion/Orion.lua')))()

-- Create Window
local Window = OrionLib:MakeWindow({
    Name = "Ninja Legends Auto Farm",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "OrionConfig"
})

-- Create Main Tab
local Tab = Window:MakeTab({
    Name = "Main",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Notification Example
OrionLib:MakeNotification({
    Name = "Welcome!",
    Content = "UI Loaded Successfully",
    Image = "rbxassetid://4483345998",
    Time = 3
})

-- Variables for locations and settings
local sellLocation = game.Workspace.SellNinjitsu -- Adjust this location if needed
local islandsFolder = game.Workspace.Islands -- Folder containing the islands
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local backpack = player.Backpack

-- Add Buttons and Toggles to Orion UI

-- Auto Sell Button
Tab:AddButton({
    Name = "Auto Sell",
    Callback = function()
        -- Function to teleport to Sell Ninjitsu location
        local function teleportToSell()
            if sellLocation then
                humanoidRootPart.CFrame = sellLocation.CFrame
            end
        end

        -- Function to Auto Sell (simulate clicking the sell button)
        local function autoSell()
            teleportToSell()
            while true do
                -- Assuming there's a ClickDetector in SellNinjitsu object for selling
                local sellButton = sellLocation:FindFirstChild("ClickDetector")
                if sellButton then
                    -- Simulate click to sell
                    fireclickdetector(sellButton)
                end
                wait(0.1) -- Faster selling loop (reduce this to increase speed)
            end
        end

        -- Start Auto Sell
        autoSell()
    end    
})

-- Auto Swing Sword Button
Tab:AddButton({
    Name = "Auto Swing Sword",
    Callback = function()
        -- Function to Auto Swing Sword
        local function autoSwingSword()
            while true do
                -- Check if the player has a sword (Tool)
                local sword = backpack:FindFirstChild("Sword") -- Change "Sword" to the actual name of the player's sword tool
                if sword and sword:IsA("Tool") then
                    -- Simulate swing by activating the sword tool
                    sword:Activate() -- This will trigger the tool's activation (swinging)
                end
                wait(0.1) -- Faster swing interval (reduce this to increase swing speed)
            end
        end

        -- Start Auto Swing Sword
        autoSwingSword()
    end    
})

-- Island Teleportation
Tab:AddDropdown({
    Name = "Select Island",
    Options = { "Island 1", "Island 2", "Island 3" }, -- Add as many islands as necessary
    Default = "Island 1",
    Callback = function(option)
        local island = islandsFolder:FindFirstChild(option)
        if island then
            humanoidRootPart.CFrame = island.PrimaryPart.CFrame
        end
    end
})

-- Misc Features: Infinite Yield, Unlimited Jump, Speed Boost
Tab:AddToggle({
    Name = "Infinite Yield",
    Default = false,
    Callback = function(state)
        if state then
            while true do
                game:GetService("ReplicatedStorage").Events.Yield:FireServer()
                wait(0.5)
            end
        end
    end
})

Tab:AddToggle({
    Name = "Unlimited Jump",
    Default = false,
    Callback = function(state)
        if state then
            while true do
                character.Humanoid.JumpHeight = math.huge
                wait(0.5)
            end
        end
    end
})

Tab:AddToggle({
    Name = "Speed Boost",
    Default = false,
    Callback = function(state)
        if state then
            while true do
                character.Humanoid.WalkSpeed = 100
                wait(0.5)
            end
        end
    end
})

-- Auto Buy Features
Tab:AddButton({
    Name = "Auto Buy Rank",
    Callback = function()
        local function autoBuyNewRank()
            while true do
                if game.Players.LocalPlayer.PlayerStats.Rank < 10 then
                    game:GetService("ReplicatedStorage").Events.BuyRank:FireServer()
                end
                wait(5)
            end
        end

        -- Start Auto Buy Rank
        autoBuyNewRank()
    end    
})

Tab:AddButton({
    Name = "Auto Buy Belt",
    Callback = function()
        local function autoBuyNewBelt()
            while true do
                if game.Players.LocalPlayer.PlayerStats.Belt < 5 then
                    game:GetService("ReplicatedStorage").Events.BuyBelt:FireServer()
                end
                wait(5)
            end
        end

        -- Start Auto Buy Belt
        autoBuyNewBelt()
    end    
})

Tab:AddButton({
    Name = "Auto Upgrade Skills",
    Callback = function()
        local function autoSkillsUpgrade()
            while true do
                game:GetService("ReplicatedStorage").Events.UpgradeSkills:FireServer()
                wait(3)
            end
        end

        -- Start Auto Skills Upgrade
        autoSkillsUpgrade()
    end    
})

-- Toggle UI Button
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "ToggleUI"
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false

local Toggle = Instance.new("TextButton")
Toggle.Name = "Toggle"
Toggle.Parent = ScreenGui
Toggle.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Toggle.BackgroundTransparency = 0.5
Toggle.Position = UDim2.new(0, 0, 0.45, 0)
Toggle.Size = UDim2.new(0, 50, 0, 50)
Toggle.Draggable = true
Toggle.Text = "UI"

local Corner = Instance.new("UICorner")
Corner.CornerRadius = UDim.new(0.2, 0)
Corner.Parent = Toggle

Toggle.MouseButton1Click:Connect(function()
    OrionLib:ToggleUi()
end)

-- Initialize Orion UI
OrionLib:Init()
